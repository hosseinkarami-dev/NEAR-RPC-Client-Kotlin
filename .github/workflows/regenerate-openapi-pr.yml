name: Regenerate NEAR RPC Client (auto PR + merge)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # daily run (every day at midnight)

permissions:
  contents: write
  pull-requests: write

jobs:
  regenerate-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Exit if triggered by GitHub Actions bot
        if: github.actor == 'github-actions[bot]'
        run: |
          echo "Triggered by GitHub Actions bot; exiting to avoid loop."
          exit 0

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Ensure local main is up-to-date
        run: |
          set -euo pipefail
          git fetch origin main --tags
          git checkout main || git switch main
          git reset --hard origin/main

      - name: Create regenerate branch
        id: branch
        run: |
          set -euo pipefail
          SHORT_SHA=${GITHUB_SHA:0:8}
          BRANCH="regenerate-openapi-${GITHUB_RUN_NUMBER}-${SHORT_SHA}"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"
          git checkout -b "$BRANCH"

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Run Generator
        run: ./gradlew :generator:run --args="--openapi-url https://raw.githubusercontent.com/near/nearcore/master/chain/jsonrpc/openapi/openapi.json" --no-daemon

      - name: Build and run tests
        run: ./gradlew build --stacktrace --no-daemon

      - name: Commit and push regenerated sources
        id: commit
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          set -euo pipefail
          git config --local user.email "automation@github.com"
          git config --local user.name "GitHub Actions Bot"

          git add -A

          echo "---- git status (after add) ----"
          git status --porcelain || true
          echo "---- staged diff (if any) ----"
          git --no-pager diff --staged || true

          if git diff --staged --quiet; then
            echo "No regenerated changes — nothing to create a PR for."
            echo "pr_required=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          git commit -m "fix: regenerate client from OpenAPI"
          git push "https://x-access-token:${PAT_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" "${{ steps.branch.outputs.branch }}"

          echo "pr_required=true" >> "$GITHUB_OUTPUT"

      - name: Auto-create and merge PR
        if: steps.commit.outputs.pr_required == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const branch = '${{ steps.branch.outputs.branch }}';
            const title = `chore: regenerate client from OpenAPI (${branch})`;
            const body = `This PR regenerates the NEAR RPC client and models from the latest OpenAPI spec.\n\nAutomatically merged after generation.`;

            // Create PR
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              head: branch,
              base: "main",
              body
            });

            // Auto-merge PR (squash)
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.data.number,
              merge_method: "squash"
            });

            console.log(`✅ PR #${pr.data.number} created and merged.`);
