name: Auto Release after Merge

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine new tag version
        id: tag
        run: |
          set -euo pipefail
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          IFS='.' read -r MAJOR MINOR PATCH <<<"${LAST_TAG#v}"
          MAJOR=${MAJOR:-0}
          MINOR=${MINOR:-0}
          PATCH=${PATCH:-0}
          NEW_TAG="v${MAJOR}.${MINOR}.$((PATCH+1))"
          echo "new_tag=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "New tag determined: ${NEW_TAG}"

      - name: Create and push tag (if not exists)
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          set -euo pipefail
          NEW_TAG="${{ steps.tag.outputs.new_tag }}"

          git fetch --tags

          # if tag already exists, skip to avoid collision
          if git rev-parse "refs/tags/${NEW_TAG}" >/dev/null 2>&1; then
            echo "Tag ${NEW_TAG} already exists. Skipping creation."
            exit 0
          fi

          git tag -a "${NEW_TAG}" -m "Release ${NEW_TAG} (automated)"
          git push "https://x-access-token:${PAT_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" "${NEW_TAG}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: "Release ${{ steps.tag.outputs.new_tag }}"
          body: |
            ðŸš€ Automated release generated by workflow.
            This release was created automatically after merging the regenerated client into main.
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}